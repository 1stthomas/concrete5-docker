name: Build Docker images

on:
  pull_request:
  push:
    branches:
      - master
  repository_dispatch:
    types:
      - build

jobs:
  build_base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["5.5", "7.2"]
    name: Base image with PHP ${{ matrix.php_version }}
    steps:
      - name: Environment info
        run: |
          printf 'github.event_name: %s\n' "${{ github.event_name }}"
          printf 'github.ref: %s\n' "${{ github.ref }}"
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Build
        run: docker build --build-arg CCM_PHP_VERSION=${{ matrix.php_version }} --force-rm --rm --tag mlocati/docker5:base-${{ matrix.php_version }} ./base
      - name: Save base Docker image
        if: github.event_name != 'push' || github.ref != 'refs/heads/master'
        run: |
          mkdir -p /tmp/base-image-${{ matrix.php_version }}
          docker save mlocati/docker5:base-${{ matrix.php_version }} | gzip > /tmp/base-image-${{ matrix.php_version }}/image.tgz
      - name: Upload
        if: github.event_name != 'push' || github.ref != 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: base-image-${{ matrix.php_version }}
          path: /tmp/base-image-${{ matrix.php_version }}
      - name: Docker Hub login
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish on Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions-hub/docker@master
        with:
          args: push mlocati/docker5:base-${{ matrix.php_version }}
  build:
    runs-on: ubuntu-latest
    needs: build_base
    strategy:
      matrix:
        data:
          - php_version: "7.2"
            c5_archive: https://github.com/concrete5/concrete5/archive/develop.tar.gz
            c5_startingpoint: elemental_full
            image_tag: develop-full
          - php_version: "7.2"
            c5_archive: https://github.com/concrete5/concrete5/archive/develop.tar.gz
            c5_startingpoint: elemental_blank
            image_tag: develop
          - php_version: "7.2"
            c5_archive: https://www.concrete5.org/download_file/-/view/111592/8497/
            c5_startingpoint: elemental_full
            image_tag: 8.5.2-full
            additional_tag: latest-full
          - php_version: "7.2"
            c5_archive: https://www.concrete5.org/download_file/-/view/111592/8497/
            c5_startingpoint: elemental_blank
            image_tag: 8.5.2
            additional_tag: latest
          - php_version: "5.5"
            c5_archive: https://www.concrete5.org/download_file/-/view/93075/8497/
            c5_startingpoint: elemental_full
            image_tag: 5.7.5.13-full
          - php_version: "5.5"
            c5_archive: https://www.concrete5.org/download_file/-/view/93075/8497/
            c5_startingpoint: elemental_blank
            image_tag: 5.7.5.13
    name: concrete5 ${{ matrix.data.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Download base image with PHP ${{ matrix.data.php_version }}
        if: github.event_name != 'push' || github.ref != 'refs/heads/master'
        uses: actions/download-artifact@v1
        with:
          name: base-image-${{ matrix.data.php_version }}
          path: /tmp/base-image-${{ matrix.data.php_version }}
      - name: Load base image
        if: github.event_name != 'push' || github.ref != 'refs/heads/master'
        run: docker load --input /tmp/base-image-${{ matrix.data.php_version }}/image.tgz
      - name: Build with starting point ${{ matrix.data.c5_startingpoint }}
        run: |
          docker build --build-arg CCM_PHP_VERSION=${{ matrix.data.php_version }} --build-arg CCM_C5_ARCHIVE=${{ matrix.data.c5_archive }} --build-arg CCM_STARTING_POINT=${{ matrix.data.c5_startingpoint }} --tag mlocati/docker5:${{ matrix.data.image_tag }} ./installed
          if test -n "${{ matrix.data.additional_tag }}"; then
            docker tag mlocati/docker5:${{ matrix.data.image_tag }} mlocati/docker5:${{ matrix.data.additional_tag }}
          fi
      - name: Check that MariaDB works
        run: |
          docker run --rm --entrypoint='' mlocati/docker5:${{ matrix.data.image_tag }} ccm-service start db
      - name: Docker Hub login
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish on Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions-hub/docker@master
        with:
          args: push mlocati/docker5:${{ matrix.data.image_tag }}
      - name: Publish on Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.data.additional_tag
        uses: actions-hub/docker@master
        with:
          args: push mlocati/docker5:${{ matrix.data.additional_tag }}
